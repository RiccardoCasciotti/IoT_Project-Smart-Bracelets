Riccardo Casciotti 10806697
Paolo Ritirato 10868927

PositionSensorP.nc:

-provides the fake value for the status read.


PositionSensorC.nc:

-connects components for PositionSensorP.


SmartBracelet.h:

-define the message structure with 5 variables (msg_type, msg_id, data, X, Y);
-define the sensor status structure with 3 variables (status, X, Y);
-preloads the key for the bracelets.


SmartBraceletAppC.nc:

-connects components for SmartBraceletC.


SmartBraceletC.nc:

-starts the antenna and the timer for pairing at the boot;
-when the timer for pairing is fired it is created and sent in broadcast a pairing message (msg_type = 0) only if the node is a parent (TOS_NODE_ID%2 ==0);
-the pairing message is received -also- from the children that checks the preloaded key with the one arrived in  the message and if they are equal it sends a confirmation message (msg_type = 1) to the parent;
-the parent acks the confirmation message and both the bracelets switch to operational mode (mode =2);
-every 10 seconds the info timer is fired and the children bracelet reads the position and status value from the fake sensor and sends them into a message for the parent;
-the parent receives the message from the children and if the status is not FALLING restarts the alert timer, otherwise sends an ALARM notification;
-when the parent doesn't receive a message from the children for 60s (and so the alarm timer expires) the bracelet goes into alarm mode and send a MISSING notification with the last position stored.


RunSimulation.py:

-creates the 4 nodes for the simulation;
-creates the file for the log;
-adds the channels to the simulation;
-runs the simulation and stops node 1 to simulate a disconnection after a certain amount of time.



